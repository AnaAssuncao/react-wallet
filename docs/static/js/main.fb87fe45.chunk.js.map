{"version":3,"sources":["components/Atom/HeaderMenuItem/HeaderMenuItem.jsx","components/Molecule/ContainerMenuHeader/ContainerMenuHeader.jsx","img/text_logo.svg","img/wallet_logo.svg","img/4u.svg","components/Atom/Logo/Logo.jsx","img/wallet_icon.svg","img/transactions_icon.svg","img/calc_icon.svg","img/news_icon.svg","img/chart_icon.svg","img/config_icon.svg","components/Organism/Header/Header.jsx","components/Atom/ContainerMainPage/ContainerMainPage.jsx","components/Atom/ContainerAsidePanel/ContainerAsidePanel.jsx","components/Atom/AsideMenuItem/AsideMenuItem.jsx","img/arrow.svg","components/Molecule/SelectWallet/SelectWallet.jsx","components/Molecule/SelectWalletToBalance/SelectWalletToBalance.jsx","components/Atom/AsideButton/AsideButton.jsx","img/sum_icon.svg","components/Organism/AsideMenuWallet/AsideMenuWallet.jsx","components/Atom/AlertToConfirm/AlertToConfirm.jsx","utils/convertData.js","components/Atom/CardsInvestment/CardsInvestment.jsx","components/Atom/RadialChart/RadialChart.jsx","img/open_icon.svg","img/closed_icon.svg","components/Molecule/HeaderInvestmentCard/HeaderInvestmentCard.jsx","img/loading.gif","components/Atom/Loading/Loading.jsx","components/Atom/DataGrid/DataGrid.jsx","components/Molecule/InvestmentCard/InvestmentCard.jsx","components/Organism/WalletEquity/getDataAssets.js","TestData/createDataAssets.js","components/Atom/TreemapChart/TreemapChart.jsx","components/Organism/WalletEquity/WalletEquity.jsx","components/Atom/ContainerNavBarItem/ContainerNavBarItem.jsx","components/Molecule/ContainerNavBar/ContainerNavBar.jsx","utils/colors.js","components/Atom/MainButton/MainButton.jsx","img/gold_icon.svg","img/pig_icon.svg","img/chart2_icon.svg","components/Organism/WalletEarnings/getDataAssets.js","components/Atom/DatePickers/DatePickers.jsx","components/Atom/RangeSlider/RangeSlider.jsx","components/Molecule/FilterByDate/FilterByDate.jsx","components/Organism/WalletEarnings/WalletEarnings.jsx","components/Organism/MainWallet/MainWallet.jsx","components/Organism/WalletsToCustomize/getDataAssets.js","context/dataAutocomplete.js","context/dataAssets.js","components/Atom/CounterPercentage/CounterPercentage.jsx","components/Atom/ModalAlert/ModalAlert.jsx","components/Molecule/TableRowForView/TableRowForView.jsx","components/Atom/AutocompleteInput/AutocompleteInput.jsx","components/Molecule/EditableTableRow/EditableTableRow.jsx","components/Atom/TotalWallet/TotalWallet.jsx","components/Organism/TableWalletsToCustomize/TableWalletsToCustomize.jsx","components/Atom/InputText/InputText.jsx","components/Molecule/ContainerTitleEditable/ContainerTitleEditable.jsx","img/return_icon.svg","components/Organism/WalletsToCustomize/WalletsToCustomize.jsx","pages/Wallets/getDataWallets.js","pages/Wallets/Wallets.jsx","Routes.jsx","index.js"],"names":["HeaderMenuItem","extraClass","name","srcImg","className","src","loading","alt","ContainerMenuHeader","listNavigations","arrayListMenu","map","ind","value","Logo","walletLogo","textLogo","forYouLogo","Header","walletIcon","transactionsIcon","calcIcon","newsIcon","chartIcon","configIcon","ContainerMainPage","props","children","ContainerAsidePanel","AsideMenuItem","classSelect","codeWallet","handleSelectCodeWallet","onClick","SelectWallet","summaryWallet","nameCategory","listWallets","selectCode","useState","isDisplayWallets","SetIsDisplayWallets","listWallet","keyList","nameWallet","wallets","percentageWallet","percentEquity","arrow","categories","title","SelectWalletToBalance","balanceWallets","AsideButton","others","type","defaultProps","AsideMenuWallet","selectedWalletCode","handleCodeWallet","handleCodeBalanceWallet","addNewCustomWallet","arrayCategoriesSumary","Object","keys","arrayCodeWallets","listSelectWallets","filter","wallet","category","getCategoryWallets","listBalanceWallets","sum","messages","noSaveWallet","dateLimit","useStyles","makeStyles","theme","container","width","height","padding","display","alignItems","fontSize","AlertToConfirm","typeMessage","severity","handleAlert","classes","handleCloseAlert","Alert","onClose","action","Button","color","size","variant","numberToCurrenty","number","toLocaleString","style","currency","CardsInvestment","investment","amount","cost","result","percentResult","RadialChart","percentage","sizeChart","optionsRadial","plotOptions","radialBar","startAngle","endAngle","hollow","margin","background","image","undefined","imageOffsetX","imageOffsetY","position","dropShadow","enabled","top","left","blur","opacity","track","strokeWidth","colors","dataLabels","showOn","offsetY","show","formatter","val","fontWeight","fill","labels","seriesRadial","options","series","HeaderInvestmentCard","isDisplayTable","handleDisplayTable","displayTable","noDisplayTable","Loading","DataGrid","columns","rows","heigthTable","totalRows","length","heightSize","fallback","defaultColDef","flex","sortable","resizable","enableCellTextSelection","ensureDomOrder","rowSelection","accentedSort","sortingOrder","animateRows","headerHeight","rowHeight","rowData","columnDefs","InvestmentCard","nameAsset","getDataTable","setDisplayTable","infoAsset","setInfoAsset","handleInfoAsset","data","copyAsset","assign","assetDataFormatted","formatAssets","dataAsset","chancedRows","forEach","asset","toFixed","useEffect","a","equity","Math","random","assetsTest","totalEquity","assets","objAsset","amountAssets","rowsAsset","addValueRows","modifyTest","getEquity","arrayNameAssets","nameAssets","getDataTreemap","treemapChart","createDataTreemap","push","seriesAsset","x","code","y","TreemapChart","legend","chart","toolbar","yaxis","dataChart","WalletEquity","setEquity","dataTreemap","setDataChart","handleEquity","handleDataChart","ContainerNavBarItem","extraclass","navBar","handleSelectNavigations","ContainerNavBar","arrayNavigations","selectNavigation","description","colorsButton","save","cancel","delete","titleBlue","dark","getColors","nameColor","MainButton","root","borderRadius","border","minWidth","minHeight","lineHeight","label","backgroundColor","emphasize","boxShadow","getDates","dates","startDate","endDate","textField","marginLeft","marginRight","DatePickers","labelName","dateValue","handleDateValue","refDate","useRef","current","TextField","inputRef","onBlur","id","defaultValue","InputLabelProps","shrink","RangeSlider","startingYear","valueMarks","initialValues","handleValuesSlider","marksSlider","useMemo","marks","addYears","valueMark","newMark","Slider","onChange","event","newValue","step","min","max","getMonthSlider","date","previousDate","diff","FilterByDate","handleMsgAlert","moment","defaultDate","dateString","minDate","setMinDate","maxDate","setMaxDate","startDateObject","toObject","endDateObject","qtMonths","years","rangeSlider","startMarkSlider","months","endMarkSlider","rangeMonth","setRangeMonth","changeDate","pastValue","fistDay","differenceValues","add","day","daysInMonth","format","handleInferiorLimit","handleUpperLimit","newValueDate","newDate","valueInferiorRange","valueUpperRange","WalletEarnings","setDates","handleDates","gold","pig","MainWallet","handleEditableTable","isAlert","message","alert","setAlert","setSelectNavigation","handleAlertClosure","componentsWallets","earnings","setTimeout","profitability","editable","startIcon","selectedNavigations","getDataDefaultAssets","tableData","newData","getDataAllAssets","DataAssetsContext","createContext","DataAssetsProvider","dataAssets","setDataAssets","categoriesSelect","setCategories","handleCategoriesSelect","dataCategories","Provider","getDataAssets","getCategories","getCode","categoryData","handleCodeSelect","getDescription","CounterPercentage","valuePercent","colorButton","handleValuePercentage","widthContainer","Number","fontSizeInput","widthInput","handleChange","valueChance","handleChanceNumber","numberChange","e","target","saveWallet","deleteWallet","cancelWallet","deleteRow","paper","shadows","flexDirection","justifyContent","buttonClose","right","cursor","containerButtons","ModalAlert","propsButton","confirmModal","React","open","setOpen","handleClose","body","Fragment","Modal","TableRowForView","tableRowData","percentWallet","setPercentage","newClass","setNewClass","handlePercentage","valuePercentage","handleNewClass","maxLength","AutocompleteInput","dataInput","nameLabel","handleAutocomplete","inputValue","setInputValue","Autocomplete","disableClearable","getOptionSelected","option","getOptionLabel","renderInput","params","placeholder","onInputChange","newInputValue","EditableTableRow","deleteEditableRow","useContext","percentCustomed","newAssets","setNewAssets","allCategories","allCodes","setAllCodes","handleNewValueAssets","dataCodes","newValueCategory","newValueCode","TotalWallet","total","TableWalletsToCustomize","walletsToCustomize","handleAssetsChanges","handleTotalPercent","defaultWallets","dataTable","setDataTable","changesAssets","setChangesAssets","dataEditable","setDataEditable","keysDataTable","dataTableAssets","allPercentages","nameKey","getCodeAndPercent","setAllPercentages","reduce","valueTotal","nameCode","getTotalAssets","percent","newInfo","addNewAssets","newArray","concat","key","indice","splice","codeAssets","InputText","nameInput","ContainerTitleEditable","defaultValuesWallet","handleHeaderChanges","defaultTitle","dataHeader","setDataHeader","newNameWallet","WalletsToCustomize","handlePageReturn","setDefaultValuesWallet","changes","setChanges","totalPercent","setTotalPercent","isDisplayAlert","setIsDisplayAlert","returnIcon","newChange","getAllWallets","delay","ms","Promise","resolve","Wallets","previus","walletSetup","setWalletSetup","typesWallets","changeWalletPage","selectedCodeWallet","handleWalletData","allWallets","defaultWallet","Routes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb87fe45.chunk.js","sourcesContent":["import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './headerMenuItem.scss'\r\n\r\nconst HeaderMenuItem =({extraClass,name,srcImg}) =>{\r\n    return (   \r\n        <li className={\"header-menu-item \" + extraClass}> \r\n            <img src={srcImg} loading=\"lazy\" alt=\"\" className=\"header-menu-item__icon\"></img>\r\n            <p className=\"header-menu-item__text\">{name}</p>\r\n        </li>)\r\n}\r\n  \r\nHeaderMenuItem.propTypes={\r\n    classSelect:PropTypes.string, \r\n    scrImg:PropTypes.string, \r\n    name:PropTypes.string\r\n}\r\n\r\n\r\nexport default HeaderMenuItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {HeaderMenuItem} from \"../../Atom/HeaderMenuItem\"\r\nimport './containerMenuHeader.scss'\r\n\r\nconst ContainerMenuHeader = ({arrayListMenu}) =>{\r\n    const listNavigations = arrayListMenu.map(\r\n        ({name,value,srcImg},ind) =>{\r\n            let extraClass = \"\"\r\n            if(ind===0){ \r\n                extraClass=\"header-menu-item__fist\" }\r\n            return (   \r\n            <HeaderMenuItem  key={value}     \r\n                extraClass={extraClass}       \r\n                srcImg={srcImg}\r\n                name={name}\r\n                value={value}>\r\n            </HeaderMenuItem>)\r\n    })\r\n\r\n    return (\r\n        <ul className=\"header-menu\">\r\n           {listNavigations}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContainerMenuHeader.propTypes={\r\n    namesNavigations: PropTypes.array,\r\n    select:PropTypes.string,\r\n    handleSelectNavigations:PropTypes.func\r\n}\r\n\r\nexport default ContainerMenuHeader\r\n\r\n","export default __webpack_public_path__ + \"static/media/text_logo.0f9b0cd4.svg\";","export default __webpack_public_path__ + \"static/media/wallet_logo.a95a840d.svg\";","export default __webpack_public_path__ + \"static/media/4u.b1aeb6ef.svg\";","import React from 'react'\r\nimport './logo.scss'\r\nimport textLogo from \"../../../img/text_logo.svg\"\r\nimport walletLogo from \"../../../img/wallet_logo.svg\"\r\nimport forYouLogo from \"../../../img/4u.svg\"\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"logo\">\r\n        <img src={walletLogo} alt=\"Logo\" className=\"logo__img-wallet\"></img>\r\n        <img src={textLogo} alt=\"Logo\" className=\"logo__img-text\"></img>\r\n        <img src={forYouLogo} alt=\"Logo\" className=\"logo__img4u\"></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Logo","export default __webpack_public_path__ + \"static/media/wallet_icon.1bc2857a.svg\";","export default __webpack_public_path__ + \"static/media/transactions_icon.55d7ebce.svg\";","export default __webpack_public_path__ + \"static/media/calc_icon.16f085d0.svg\";","export default __webpack_public_path__ + \"static/media/news_icon.34c315ec.svg\";","export default __webpack_public_path__ + \"static/media/chart_icon.60833fdf.svg\";","export default __webpack_public_path__ + \"static/media/config_icon.0ebc36dd.svg\";","import React from \"react\"\r\n\r\nimport {ContainerMenuHeader} from \"../../Molecule/ContainerMenuHeader\"\r\nimport {Logo} from \"../../Atom/Logo\"\r\n\r\nimport walletIcon from \"../../../img/wallet_icon.svg\"\r\nimport transactionsIcon from \"../../../img/transactions_icon.svg\"\r\nimport calcIcon from \"../../../img/calc_icon.svg\"\r\nimport newsIcon from \"../../../img/news_icon.svg\"\r\nimport chartIcon from \"../../../img/chart_icon.svg\"\r\nimport configIcon from \"../../../img/config_icon.svg\"\r\n\r\nimport \"./header.scss\"\r\nconst Header = () =>{\r\n    const arrayListMenu =[\r\n        {name:\"CARTEIRAS\",value:\"wallet\", srcImg:walletIcon},\r\n        {name:\"NEGOCIAÇÕES\",value:\"negotiations\", srcImg:transactionsIcon},\r\n        {name:\"INFO. TRIBUTOS\",value:\"taxes\", srcImg:calcIcon},\r\n        {name:\"NOTÍCIAS\",value:\"news\", srcImg:newsIcon},\r\n        {name:\"INDICADORES\",value:\"indicators\", srcImg:chartIcon}]        \r\n        \r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"header__logo\">\r\n                <Logo></Logo>\r\n            </div>\r\n            <div  className=\"header__menu\">\r\n                <ContainerMenuHeader arrayListMenu={arrayListMenu}>\r\n                </ContainerMenuHeader>\r\n            </div>\r\n            <div>\r\n                <div className={\"header__config\"}> \r\n                    <img src={configIcon} loading=\"lazy\" alt=\"Ícone Configuração\" className=\"header-menu-item__icon\"/>\r\n                    <span className=\"header-menu-item__text\">CONFIGURAÇÕES</span>\r\n                </div>\r\n            </div>\r\n\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nimport './containerMainPage.scss'\r\n\r\nconst ContainerMainPage = (props)=>{\r\n    return (\r\n        <main className=\"container-main-page\">\r\n            {props.children}\r\n        </main>\r\n    )\r\n}\r\n\r\n\r\nexport default ContainerMainPage","import React from 'react'\r\n\r\nimport './containerAsidePanel.scss'\r\n\r\nconst ContainerAsidePanel = (props)=>{\r\n    return (\r\n        <aside className=\"container-aside-panel\">\r\n            {props.children}\r\n        </aside>\r\n    )\r\n}\r\n\r\nexport default ContainerAsidePanel","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './asideMenuItem.scss'\r\n\r\nconst AsideMenuItem = ({classSelect,codeWallet,handleSelectCodeWallet,children}) =>{\r\n    return (   \r\n        <li className={\"aside-menu-item \" + classSelect} \r\n            onClick={()=>handleSelectCodeWallet(codeWallet)}> \r\n            {children}\r\n        </li>)\r\n}\r\n\r\nAsideMenuItem.propTypes={\r\n    classSelect: PropTypes.string, \r\n    value: PropTypes.string,\r\n    handleSelectCodeWallet: PropTypes.func,\r\n    children: PropTypes.array\r\n}\r\n\r\nexport default AsideMenuItem\r\n\r\n","export default __webpack_public_path__ + \"static/media/arrow.5a12e1ea.svg\";","import {useState} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { AsideMenuItem } from \"../../Atom/AsideMenuItem\"\r\nimport arrow from \"../../../img/arrow.svg\"\r\n\r\nimport \"./selectWallet.scss\"\r\n\r\nconst SelectWallet = ({summaryWallet,nameCategory, listWallets,selectCode,handleSelectCodeWallet}) =>{\r\n\r\n    const [isDisplayWallets,SetIsDisplayWallets] =useState(true)\r\n    const listWallet = listWallets.map(\r\n        (codeWallet) =>{\r\n            const classSelect = selectCode===codeWallet?\"aside-menu-item__select\":\"\"\r\n            const keyList = codeWallet\r\n            const nameWallet = summaryWallet.wallets[codeWallet].name\r\n            const percentageWallet = summaryWallet.wallets[codeWallet].percentEquity*100\r\n\r\n            return (   \r\n            <AsideMenuItem\r\n                key={keyList}\r\n                classSelect={classSelect} \r\n                handleSelectCodeWallet={handleSelectCodeWallet}\r\n                codeWallet={codeWallet}>\r\n                <span className=\"aside-menu-item__name\">{nameWallet}</span>\r\n                <span className=\"aside-menu-item__percentage\">({percentageWallet}% P)</span>\r\n            </AsideMenuItem>)\r\n    })\r\n\r\n    const handlesDisplayWallets=()=>{\r\n        const isDisplay= isDisplayWallets===true? false:true\r\n        SetIsDisplayWallets(isDisplay)\r\n    }\r\n\r\n    return (\r\n        <div className=\"select-wallet\">\r\n            {nameCategory &&\r\n                <div className=\"select-wallet__title\">\r\n                    <img src={arrow} alt=\"\" className=\"select-wallet__icon\" onClick={handlesDisplayWallets}></img>\r\n                    <strong className=\"select-wallet__text\">{summaryWallet.categories[nameCategory].title}</strong>\r\n                </div>\r\n            }\r\n            {\r\n                isDisplayWallets &&\r\n                    <ul className=\"select-wallet__list\">\r\n                        {listWallet}\r\n                    </ul>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nSelectWallet.propTypes={\r\n    infoWallets: PropTypes.object,\r\n    select:PropTypes.string,\r\n    handleSelectCodeWallet:PropTypes.func\r\n}\r\n\r\nexport default SelectWallet\r\n\r\n","\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport { AsideMenuItem } from \"../../Atom/AsideMenuItem\"\r\n\r\nimport \"./selectWalletToBalance.scss\"\r\n\r\nconst SelectWalletToBalance = ({summaryWallet, listWallets,selectCode,handleSelectCodeWallet}) =>{\r\n    const listWallet = listWallets.map(\r\n        (codeWallet) =>{\r\n            const classSelect = selectCode===codeWallet?\"aside-menu-item__select\":\"\"\r\n            const keyList = codeWallet\r\n            const nameWallet = summaryWallet.balanceWallets[codeWallet].name\r\n            const percentageWallet = summaryWallet.balanceWallets[codeWallet].percentEquity*100\r\n\r\n            return (   \r\n            <AsideMenuItem\r\n                key={keyList}\r\n                classSelect={classSelect} \r\n                handleSelectCodeWallet={handleSelectCodeWallet}\r\n                codeWallet={codeWallet}>\r\n                <span className=\"aside-menu-item__name\">{nameWallet}</span>\r\n                <span className=\"aside-menu-item__percentage\">({percentageWallet}% P)</span>\r\n            </AsideMenuItem>)\r\n    })\r\n\r\n    return (\r\n        <div className=\"select-wallet-to-balance\">\r\n            <ul className=\"select-wallet-to-balance__list\">\r\n                {listWallet}\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nSelectWalletToBalance.propTypes={\r\n    infoWallets: PropTypes.object,\r\n    select:PropTypes.string,\r\n    handleSelectCodeWallet:PropTypes.func\r\n}\r\n\r\nexport default SelectWalletToBalance\r\n\r\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport './asideButton.scss'\n\nconst AsideButton = ({children,...others}) => {\n  return (\n    <button type=\"button\"  className= \"aside-button\" {...others}>\n      {children}\n    </button>\n  )\n}\n\nAsideButton.propTypes = {\n  children: PropTypes.array.isRequired,\n  onClick: PropTypes.func,\n}\n\nAsideButton.defaultProps = {\n  onClick: ()=>{},\n}\n\nexport default AsideButton","export default __webpack_public_path__ + \"static/media/sum_icon.4a78657f.svg\";","import PropTypes from 'prop-types'\r\n\r\nimport {SelectWallet} from \"../../Molecule/SelectWallet\"\r\nimport {SelectWalletToBalance} from \"../../Molecule/SelectWalletToBalance\"\r\nimport {AsideButton} from \"../../Atom/AsideButton\"\r\nimport sum from \"../../../img/sum_icon.svg\"\r\n\r\nimport './asideMenuWallet.scss'\r\n\r\nconst AsideMenuWallet = ({summaryWallet,selectedWalletCode,handleCodeWallet,handleCodeBalanceWallet,addNewCustomWallet})=>{\r\n    const arrayCategoriesSumary = Object.keys(summaryWallet.categories) \r\n    const arrayCodeWallets =  Object.keys(summaryWallet.wallets) \r\n    const getCategoryWallets= (nameCategory) =>{\r\n          return arrayCodeWallets.filter((wallet)=> summaryWallet.wallets[wallet].category===nameCategory)\r\n    }\r\n\r\n    const listSelectWallets = arrayCategoriesSumary.map((nameCategory)=>{\r\n        const listWallets = getCategoryWallets(nameCategory,arrayCodeWallets)\r\n        return <SelectWallet \r\n                    key={nameCategory}\r\n                    summaryWallet = {summaryWallet}\r\n                    nameCategory = {nameCategory}\r\n                    listWallets={listWallets} \r\n                    selectCode={selectedWalletCode} \r\n                    handleSelectCodeWallet={handleCodeWallet}/>\r\n    })\r\n\r\n    const listBalanceWallets = Object.keys(summaryWallet.balanceWallets)\r\n\r\n    return (\r\n        <aside className=\"aside-menu-wallet\">\r\n            <div className=\"aside-menu-wallet__container\">\r\n                <div className=\"aside-menu-wallet__title\">Minhas Carteiras</div>\r\n                {listSelectWallets}\r\n                <AsideButton onClick={addNewCustomWallet}>\r\n                    <img src={sum} alt=\"\" className=\"aside-button__icon\"></img>\r\n                    <span className=\"aside-button__text\">Nova Carteira</span>\r\n                </AsideButton>\r\n            </div>\r\n            <div className=\"aside-menu-wallet__container\">\r\n                <strong className=\"aside-menu-wallet__title\">Balancear Carteiras</strong>\r\n               <SelectWalletToBalance \r\n                    summaryWallet = {summaryWallet}\r\n                    listWallets={listBalanceWallets}\r\n                    selectCode={selectedWalletCode} \r\n                    handleSelectCodeWallet={handleCodeBalanceWallet}/>\r\n            </div>\r\n        </aside>\r\n    )\r\n}\r\n\r\nAsideMenuWallet.propTypes={\r\n    summaryWallets:PropTypes.object,\r\n    selectedWalletCode:PropTypes.string,\r\n    handleCodeWallet:PropTypes.func,\r\n    handleCodeCustomWallet:PropTypes.func,\r\n    handleCodeBalanceWallet:PropTypes.func,\r\n    addNewCustomWallet:PropTypes.func\r\n}\r\n\r\nexport default AsideMenuWallet\r\n","import { makeStyles } from \"@material-ui/core/styles\"\r\nimport Alert from \"@material-ui/lab/Alert\"\r\nimport Button from \"@material-ui/core/Button\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./alertToConfirm.scss\"\r\n\r\nconst messages={\r\n  noSaveWallet: \"Não foi possível salvar a carteira, complete 100% no total geral.\",\r\n  dateLimit:\"Data fora do limite das operações.\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  container:{\r\n    width:\"100%\",\r\n    height:\"5rem\",\r\n    padding:\"1rem\", \r\n    display:\"flex\", \r\n    alignItems:\"center\",\r\n    fontSize:\"0.9rem\"}\r\n}))\r\n\r\nconst AlertToConfirm =({typeMessage,severity,handleAlert})=> {\r\n  const classes = useStyles()\r\n  const handleCloseAlert=()=>{\r\n    handleAlert()\r\n  }\r\n\r\n  return (\r\n    <div className=\"alert-to-confirm\">\r\n      <Alert severity={severity} \r\n            className={classes.container} \r\n            onClose={handleCloseAlert}\r\n            action={\r\n            <Button color=\"inherit\" size=\"small\" variant=\"outlined\" onClick={handleCloseAlert}>\r\n              Ok\r\n            </Button>\r\n          }>{messages[typeMessage]}</Alert>\r\n    </div>\r\n  )\r\n}\r\n\r\nAlertToConfirm.propTypes={\r\n  severity:PropTypes.string, \r\n  handleAlert:PropTypes.func,\r\n  typeMessage:PropTypes.string\r\n}\r\n\r\nexport default AlertToConfirm","function numberToCurrenty(number){\r\n    return number.toLocaleString('pt-br',{style: 'currency', currency: 'BRL'});\r\n}\r\n\r\nexport{\r\n    numberToCurrenty\r\n}","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport {numberToCurrenty} from \"../../../utils/convertData\"\r\nimport './cardsInvestment.scss'\r\n\r\nconst CardsInvestment = ({investment}) => \r\n{\r\n  let {amount,cost, result,percentResult} = investment\r\n  amount = numberToCurrenty(amount)\r\n  cost = numberToCurrenty(cost)\r\n  result = numberToCurrenty(result)\r\n\r\n    return (\r\n      <div className=\"cards-investment\">\r\n          <div className=\"cards-investment__result\">\r\n            <div className=\"cards-investment__item\" >\r\n              <div>\r\n                <p className=\"cards-investment__value\">{result}</p>\r\n                <p className=\"cards-investment__percent\">{percentResult}%</p>\r\n              </div>\r\n              <p className=\"cards-investment__legend\"> Lucro Bruto</p>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"cards-investment__total\">\r\n            <div className=\"cards-investment__item\" >\r\n              <p  className=\"cards-investment__value cards-investment__value--main\">{amount}</p>\r\n              <p className=\"cards-investment__legend cards-investment__legend--main\">Total Patrimônio Carteira</p>\r\n              </div>\r\n          </div>\r\n\r\n          <div className=\"cards-investment__cost\">\r\n            <div className=\"cards-investment__item\" >\r\n              <p className=\"cards-investment__value\">{cost}</p>\r\n              <p className=\"cards-investment__legend\">Investimento</p>\r\n            </div>\r\n          </div>\r\n      </div>\r\n  )\r\n}\r\n\r\nCardsInvestment.propTypes = {\r\n  investment:PropTypes.object\r\n}\r\n\r\nexport default CardsInvestment","import React from \"react\"\r\nimport Chart from \"react-apexcharts\";\r\nimport PropTypes from \"prop-types\"\r\n\r\nimport \"./radialChart.scss\"\r\n\r\nconst RadialChart = ({percentage,sizeChart}) => {\r\n  const optionsRadial = {\r\n    plotOptions: {\r\n      radialBar: {\r\n        startAngle: 0,\r\n        endAngle: 360,\r\n        hollow: {\r\n          margin: 0,\r\n          size: \"65%\",\r\n          background: \"#fcfcfc\",\r\n          image: undefined,\r\n          imageOffsetX: 0,\r\n          imageOffsetY: 0,\r\n          position: \"front\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            top: 3,\r\n            left: 0,\r\n            blur: 3,\r\n            opacity: 0.24\r\n          }\r\n        },\r\n        track: {\r\n          background: \"#fff\",\r\n          strokeWidth: \"67%\",\r\n          margin: 0, // margin is in pixels\r\n          colors:\"#000\",\r\n          dropShadow: {\r\n            enabled: true,\r\n            top: -2,\r\n            left: 0,\r\n            blur: 3,\r\n            opacity: 0.35\r\n          }\r\n        },\r\n\r\n        dataLabels: {\r\n          showOn: \"always\",\r\n          name: {\r\n            offsetY: 15,\r\n            show: true,\r\n            color: \"#888\",\r\n            fontSize: \"0.9rem\"\r\n          },\r\n          value: {\r\n            offsetY: -20,\r\n            formatter: function (val) {\r\n              return val + \"%\";\r\n            },\r\n            color: \"#888\",\r\n            fontSize: \"1.5rem\",\r\n            fontWeight:800,\r\n            show: true\r\n          }\r\n        },\r\n      },\r\n    },\r\n    fill: {\r\n      colors: \"#087233\",\r\n      opacity: 0.7,\r\n      type: 'solid',\r\n    },\r\n\r\n    labels: [\"Carteira\"]\r\n  }\r\nconst seriesRadial= [(percentage*100)]\r\n        \r\n    return(\r\n      <div className=\"radial-chart\">\r\n          <Chart\r\n          options={optionsRadial}\r\n          series={seriesRadial}\r\n          type=\"radialBar\"\r\n          height={sizeChart}\r\n          />\r\n      </div>\r\n    )\r\n}\r\n\r\nRadialChart.propTypes={\r\n  percentage:PropTypes.number,\r\n  sizeChart:PropTypes.string\r\n}\r\n\r\nexport default RadialChart","export default __webpack_public_path__ + \"static/media/open_icon.3b15e455.svg\";","export default __webpack_public_path__ + \"static/media/closed_icon.5568e0ff.svg\";","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {numberToCurrenty} from \"../../../utils/convertData\"\r\nimport {RadialChart} from \"../../Atom/RadialChart\"\r\n\r\nimport \"./headerInvestmentCard.scss\"\r\nimport displayTable from \"../../../img/open_icon.svg\"\r\nimport noDisplayTable from \"../../../img/closed_icon.svg\"\r\n\r\nconst HeaderInvestmentCard = ({investment,isDisplayTable,handleDisplayTable}) => {\r\n  let {name,cost,result,amount,percentage,percentResult} = investment\r\n  amount = numberToCurrenty(amount)\r\n  cost = numberToCurrenty(cost)\r\n  result = numberToCurrenty(result)\r\n\r\n  return (\r\n    <div className=\"header-investment-card\">\r\n      <div className=\"header-investment-card__right\">\r\n          <p className=\"header-investment-card__name\">{name}</p>\r\n          <p className=\"header-investment-card__value\">Patrimônio: {amount}</p>\r\n      </div>\r\n\r\n      <RadialChart percentage={percentage} sizeChart={\"100%\"}></RadialChart>\r\n\r\n      <div className=\"header-investment-card__left\">\r\n        <div className=\"header-investment-card__container\">\r\n          <span className=\"header-investment-card__value\">Lucro: {result}</span>\r\n          <span className=\"header-investment-card__porcentage\">({percentResult}%)</span>\r\n        </div>\r\n          <span className=\"header-investment-card__value\">Investimento: {cost}</span>\r\n      </div>\r\n    \r\n\r\n      <button type=\"button\" className={\"header-investment-card__button\"} onClick={()=>handleDisplayTable()}>\r\n        {isDisplayTable?\r\n          <img className={\"header-investment-card__icon\"}src={displayTable} alt=\"Seta\"></img>\r\n          :\r\n          <img className={\"header-investment-card__icon\"}src={noDisplayTable} alt=\"Seta\"></img>\r\n        }\r\n  \r\n      </button>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nHeaderInvestmentCard.propTypes = {\r\n    investment:PropTypes.object,\r\n    isDisplayTable:PropTypes.bool,\r\n    handleDisplayTable:PropTypes.func,\r\n}\r\n\r\nexport default HeaderInvestmentCard","export default __webpack_public_path__ + \"static/media/loading.149a7823.gif\";","import React from 'react'\r\nimport './loading.scss'\r\nimport loading from \"../../../img/loading.gif\"\r\n\r\nconst Loading = ({className}) => {\r\n  return (\r\n    <div className= {className}>\r\n      <img src={loading} alt={\"Carregando...\"} className= \"loading__img\"></img>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Loading","import {Suspense} from 'react'\r\nimport {AgGridReact} from 'ag-grid-react'\r\nimport 'ag-grid-community/dist/styles/ag-grid.css'\r\nimport './themeTable.css'\r\n// import 'ag-grid-community/dist/styles/ag-theme-material.css'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {Loading} from '../Loading'\r\nimport './dataGrid.scss'\r\n\r\nconst DataGrid = ({columns,rows}) =>{\r\n  const heigthTable ={\r\n    row:35,\r\n    header:35,\r\n    max:350,\r\n  }\r\n  const totalRows = ((rows.length)*heigthTable.row+heigthTable.header+1)\r\n  const heightSize = totalRows<heigthTable.max?totalRows:heigthTable.max\r\n\r\n    return (   \r\n        <div className=\"data-grid\" >\r\n            <Suspense fallback={<Loading/>}>\r\n            <div className=\"ag-theme-material\" style={{height:heightSize, width: \"100%\"}}>\r\n              <AgGridReact\r\n                    defaultColDef={{\r\n                        flex: 1,\r\n                        sortable: true,\r\n                        resizable: true\r\n                    }} \r\n                    enableCellTextSelection={true}\r\n                    ensureDomOrder={true}\r\n                    // rowMultiSelectWithClick={true}\r\n                    rowSelection={'multiple'}\r\n                    accentedSort={true}\r\n                    sortingOrder={['desc', 'asc', null]}\r\n                    animateRows={true}\r\n                    headerHeight={heigthTable.header}\r\n                    rowHeight={heigthTable.row}\r\n                    rowData={rows}\r\n                    columnDefs={columns}\r\n                  >\r\n              </AgGridReact>\r\n            </div>\r\n            </Suspense>\r\n        </div>\r\n    )\r\n}\r\n\r\nDataGrid.propTypes={\r\n    columns:PropTypes.array,\r\n    rows:PropTypes.array\r\n}\r\n\r\nexport default DataGrid","import {useState,useEffect }from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './investmentCard.scss'\r\nimport {HeaderInvestmentCard} from '../HeaderInvestmentCard'\r\nimport {DataGrid} from \"../../Atom/DataGrid\"\r\nimport {numberToCurrenty} from \"../../../utils/convertData\"\r\n\r\nconst InvestmentCard = ({investment, nameAsset, getDataTable}) => {\r\n  const [isDisplayTable, setDisplayTable] = useState(false)\r\n  const [infoAsset,setInfoAsset]= useState(false)\r\n\r\n  const handleDisplayTable =()=>{\r\n    const isDisplay = isDisplayTable===true?false:true\r\n    setDisplayTable(isDisplay)\r\n  }\r\n\r\n  const handleInfoAsset = (data)=>{\r\n    const copyAsset = Object.assign({}, data)\r\n    const assetDataFormatted=formatAssets(copyAsset)\r\n    setInfoAsset(assetDataFormatted)\r\n}\r\n\r\nconst formatAssets = (dataAsset) =>{\r\n  const chancedRows =[]\r\n    dataAsset.rows.forEach((asset,ind)=>{\r\n         chancedRows[ind]=Object.assign({}, asset)\r\n         chancedRows[ind].amount = numberToCurrenty(asset.amount)\r\n         chancedRows[ind].cost = numberToCurrenty(asset.cost)\r\n         chancedRows[ind].result = numberToCurrenty(asset.result)\r\n         chancedRows[ind].percentage = (asset.percentage * 100).toFixed() + \"%\"\r\n    })\r\n    return {\r\n      rows:chancedRows,\r\n      columns:dataAsset.columns\r\n    }\r\n  }\r\n\r\n  useEffect(()=>{\r\n    (async () =>{\r\n        const data= await getDataTable(nameAsset)\r\n        handleInfoAsset(data)\r\n    })()  \r\n},[])\r\n\r\n  return (\r\n    <div className=\"investment-card\">\r\n      <HeaderInvestmentCard investment={investment} handleDisplayTable={handleDisplayTable} isDisplayTable={isDisplayTable}></HeaderInvestmentCard>\r\n      {infoAsset &&\r\n        isDisplayTable &&\r\n          <DataGrid columns={infoAsset.columns} rows={infoAsset.rows} >{isDisplayTable}</DataGrid>   \r\n      } \r\n    </div>\r\n  )\r\n}\r\n\r\nInvestmentCard.propTypes = {\r\n    investment:PropTypes.object,\r\n    nameAsset:PropTypes.string,\r\n    getInfAssets:PropTypes.func\r\n}\r\n\r\nexport default InvestmentCard","import {modifyTest} from \"../../../TestData/createDataAssets\"\r\nconst equity = modifyTest()\r\n\r\nasync function getEquity(){\r\n    const data = {\r\n        totalEquity: equity.totalEquity,\r\n        arrayNameAssets: Object.keys(equity.assets)\r\n    }\r\n\r\n    data.arrayNameAssets.forEach((nameAssets)=>{\r\n        data[nameAssets] = equity.assets[nameAssets].totalEquity\r\n    })\r\n\r\n    return data\r\n}\r\n\r\nfunction getDataTable(nameAssets){\r\n    const tableData = {\r\n        columns:equity.assets[nameAssets].columns,\r\n        rows:equity.assets[nameAssets].rows\r\n    }\r\n    return tableData\r\n}\r\n\r\nasync function getDataTreemap(){\r\n    const treemapChart = []\r\n    const arrayNameAssets= Object.keys(equity.assets)\r\n    arrayNameAssets.forEach((nameAssets)=>{\r\n        const data = createDataTreemap(equity.assets[nameAssets])\r\n        treemapChart.push(data)\r\n    })\r\n    return treemapChart\r\n}\r\n\r\nfunction createDataTreemap(objAsset){\r\n    const seriesAsset = {\r\n        name:objAsset.totalEquity.name,\r\n        data:[]\r\n    }\r\n    objAsset.rows.forEach(rows => {\r\n        const dataAsset = {\r\n            x:rows.code,\r\n            y: rows.amount\r\n         }\r\n        seriesAsset.data.push(dataAsset)\r\n    });\r\n    return seriesAsset  \r\n}\r\n\r\nexport{\r\n    getEquity,\r\n    getDataTable,\r\n    getDataTreemap\r\n}","import assetsTest from \"./tableAssets-DataTest\"\r\n\r\nfunction modifyTest(){\r\n    const amount = (Math.random() * 10000000) \r\n    assetsTest.totalEquity.amount =  amount\r\n    assetsTest.totalEquity.cost = amount * 0.80\r\n    assetsTest.totalEquity.result = amount * 0.20\r\n    assetsTest.totalEquity.percentResult = 20\r\n\r\n    const arrayAssets = Object.keys(assetsTest.assets)\r\n\r\n    arrayAssets.forEach((nameAsset)=>{\r\n        const objAsset= assetsTest.assets[nameAsset]\r\n        const amountAssets = amount*objAsset.totalEquity.percentage\r\n        objAsset.rows=addValueRows(objAsset.rows,amountAssets)\r\n        objAsset.totalEquity.amount = amountAssets\r\n        objAsset.totalEquity.cost = amountAssets*0.80\r\n        objAsset.totalEquity.result = amountAssets*0.20\r\n        objAsset.totalEquity.percentResult = 20\r\n    })\r\n\r\n    return assetsTest\r\n}\r\n\r\nfunction addValueRows(rowsAsset,amountAssets){\r\n    rowsAsset.forEach((data)=>{\r\n        const amount = amountAssets*data.percentage\r\n    \r\n        data.cost = amount*0.80\r\n        data.result = amount*0.20\r\n        data.amount = amount\r\n        data.percentResult = 20\r\n    })\r\n    return rowsAsset\r\n}   \r\n\r\nexport {\r\n    modifyTest\r\n}\r\n","import React from \"react\"\r\nimport Chart from \"react-apexcharts\";\r\nimport PropTypes from \"prop-types\"\r\nimport {numberToCurrenty} from \"../../../utils/convertData\"\r\n\r\nimport \"./treemapChart.scss\"\r\n\r\nconst TreemapChart = ({sizeChart,dataChart}) => {\r\n  const options = {\r\n    legend: {\r\n      show: true,\r\n      fontSize:  \"12px\",\r\n      color:  \"#0a3c5d\",\r\n      offsetY: 8,\r\n    },\r\n    chart: {\r\n      toolbar: {\r\n        show: false\r\n      },\r\n      height: 350,\r\n      type: \"treemap\",\r\n    },\r\n    dataLabels: {\r\n      enabled: true,\r\n      style: {\r\n        fontSize: \"16px\",\r\n      }\r\n    },\r\n    yaxis:{\r\n      labels: {\r\n        show: true,\r\n        formatter: function(value) {\r\n          return numberToCurrenty(value)\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  const series=dataChart\r\n    return(\r\n      <div className=\"treemap-chart\">\r\n          <Chart\r\n            options={options}\r\n            series={series}\r\n            type=\"treemap\"\r\n            height={sizeChart}\r\n          />\r\n      </div>  \r\n    )\r\n}\r\n\r\nTreemapChart.propTypes={\r\n  dataChart:PropTypes.array,\r\n  sizeChart:PropTypes.string\r\n}\r\n\r\n\r\nexport default TreemapChart","import {  useState,useEffect }from \"react\"\r\n\r\nimport {CardsInvestment} from \"../../Atom/CardsInvestment\"\r\nimport {InvestmentCard} from \"../../Molecule/InvestmentCard\"\r\nimport {getEquity,\r\n        getDataTreemap, \r\n        getDataTable} from \"./getDataAssets\"\r\nimport { Loading } from'../../Atom/Loading'\r\nimport \"./walletEquity.scss\"\r\nimport TreemapChart from \"../../Atom/TreemapChart/TreemapChart\"\r\n\r\nconst WalletEquity = () =>{    \r\n    const [equity,setEquity] = useState(false)\r\n    const [dataTreemap,setDataChart] = useState(false)\r\n\r\n    const handleEquity = (assets)=>{\r\n        setEquity(assets)\r\n    }\r\n    const handleDataChart = (dataChart)=>{\r\n        setDataChart(dataChart)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const assets= await getEquity()\r\n            handleEquity(assets)\r\n        })()\r\n    },[])\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const dataChart= await getDataTreemap()\r\n            handleDataChart(dataChart)\r\n        })()\r\n    },[])\r\n\r\n    return(\r\n        <div className=\"equity\">\r\n            {equity?\r\n                <div className=\"equity\">\r\n                    <CardsInvestment investment={equity.totalEquity}></CardsInvestment>\r\n                    {equity.arrayNameAssets.map((nameAsset,ind)=> \r\n                      <InvestmentCard key={nameAsset+ind} investment={equity[nameAsset]} nameAsset = {nameAsset} getDataTable={getDataTable}/>)}\r\n                    \r\n                </div>\r\n                :\r\n                 <Loading className=\"equity__loading\"/>\r\n            }\r\n            {dataTreemap?\r\n                <div className=\"equity__treemap\">\r\n                    < TreemapChart dataChart={dataTreemap} sizeChart={\"400\"}/>\r\n                </div>\r\n                :\r\n                <Loading className=\"equity__loading\"></Loading>\r\n            }\r\n        </div>\r\n    )}\r\n\r\nexport default WalletEquity","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport './containerNavBarItem.scss'\r\n\r\nconst ContainerNavBarItem =({classSelect,name, extraclass, srcImg,navBar, handleSelectNavigations}) =>{\r\n    return (   \r\n        <li className={\"nav-bar-item \" +  extraclass} onClick={()=>handleSelectNavigations(navBar)}>\r\n            <img src={srcImg} alt=\"\" className=\"nav-bar-item__icon\"></img>\r\n            <p className={ \"nav-bar-item__name \" + classSelect } >{name}</p>\r\n        </li>)\r\n}\r\n  \r\nContainerNavBarItem.propTypes={\r\n    classSelect:PropTypes.string, \r\n    handleSelectNavigations:PropTypes.func,\r\n    name:PropTypes.string\r\n}\r\n\r\n\r\nexport default ContainerNavBarItem","import React from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport {ContainerNavBarItem} from \"../../Atom/ContainerNavBarItem\"\r\nimport './containerNavBar.scss'\r\n\r\nconst ContainerNavBar = ({arrayNavigations,selectNavigation,handleSelectNavigations}) =>{\r\n    const listNavigations = arrayNavigations.map(\r\n        (navBar,ind) =>{\r\n            let extraclass = \"\"\r\n            if(ind===0){ \r\n                extraclass=\"nav-bar-item__fist\" }\r\n            const classSelect = selectNavigation===navBar.value?\"nav-bar-item__select\":\"\"\r\n            \r\n            return (   \r\n            <ContainerNavBarItem  key={navBar.value}            \r\n                classSelect= {classSelect} \r\n                handleSelectNavigations={handleSelectNavigations}\r\n                name={navBar.description}\r\n                navBar={navBar}\r\n                extraclass={extraclass}\r\n                srcImg={navBar.srcImg}>\r\n            </ContainerNavBarItem>)\r\n    })\r\n\r\n    return (\r\n        <ul className=\"container-nav-bar\">\r\n           {listNavigations}\r\n        </ul>\r\n    )\r\n}\r\n\r\nContainerNavBar.propTypes={\r\n    namesNavigations: PropTypes.array,\r\n    select:PropTypes.string,\r\n    handleSelectNavigations:PropTypes.func\r\n}\r\n\r\nexport default ContainerNavBar\r\n\r\n","const colorsButton={\r\n    save:{\r\n      background:\"#34df53\",\r\n      color:\"#fcfcfc\"\r\n    },\r\n    cancel:{\r\n      background:\"#1976d2\",\r\n      color:\"#fcfcfc\"\r\n    },\r\n    delete:{\r\n      background:\"#c70e50\",\r\n      color:\"#fcfcfc\"\r\n    },\r\n    titleBlue:{\r\n      background:\"#2b86bd\",\r\n      color:\"#fcfcfc\"\r\n    },\r\n    dark:{\r\n      background:\"#1D2731\",\r\n      color:\"#fcfcfc\"\r\n    }\r\n  }\r\n\r\n  function getColors(nameColor){\r\n        return colorsButton[nameColor]\r\n  } \r\n\r\nexport {getColors}","import React from \"react\";\r\nimport { makeStyles , emphasize} from \"@material-ui/core/styles\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { getColors } from \"../../../utils/colors\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./mainButton.scss\"\r\n\r\nconst MainButton = ({children,color, fontSize, ...others}) => {\r\n  const colors = getColors(color)\r\n  const useStyles = makeStyles({\r\n    root: {\r\n      background:colors.background,\r\n      borderRadius: 3,\r\n      border:\"none\",  \r\n      color: colors.color,\r\n      fontSize:fontSize,\r\n      minWidth: \"2rem\",\r\n      minHeight: \"1.5rem\",\r\n      lineHeight: \"1rem\",\r\n    },\r\n    label:{\r\n      \"&:hover\": {\r\n        backgroundColor: emphasize(colors.background, 0.2),\r\n      '&:active': {\r\n        boxShadow: 'none',\r\n        backgroundColor: emphasize(colors.background, 0.9),\r\n      },\r\n      '&:focus': {\r\n        boxShadow: '0px 1px 6px -2 #000',\r\n      },\r\n  }}  \r\n  })\r\n  const classes = useStyles();\r\n  return <Button className={classes.root + \" \" + classes.label} {...others}>{children}</Button>;\r\n}\r\n\r\nMainButton.propTypes = {\r\n  color: PropTypes.string\r\n}\r\n\r\nMainButton.defaultProps = {\r\n  onClick: ()=>{},\r\n}\r\n\r\nexport default MainButton","export default __webpack_public_path__ + \"static/media/gold_icon.331eefad.svg\";","export default __webpack_public_path__ + \"static/media/pig_icon.745b2013.svg\";","export default __webpack_public_path__ + \"static/media/chart2_icon.03851ca4.svg\";","async function getDates(){\r\n    const dates = {\r\n        startDate: \"2017-05-03\",\r\n        endDate: \"2021-09-18\"\r\n    }\r\n\r\n    return dates\r\n}\r\n\r\nexport{\r\n    getDates\r\n}","import { useRef } from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport TextField from \"@material-ui/core/TextField\"\r\nimport PropTypes from \"prop-types\"\r\nimport { useEffect } from \"react\"\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  textField: {\r\n    marginLeft: \"2rem\",\r\n    marginRight: \"1rem\",\r\n    width: 200,\r\n  },\r\n}))\r\n\r\nconst DatePickers = ({labelName, dateValue, handleDateValue}) => {\r\n  const classes = useStyles()\r\n  const refDate = useRef()\r\n\r\n  const handleBlurValue = ()=>{\r\n      handleDateValue(refDate.current.value)\r\n  }\r\n\r\n  useEffect(()=>{\r\n    refDate.current.value=dateValue\r\n    },[dateValue])\r\n\r\n  return (\r\n    <TextField\r\n      inputRef={refDate} \r\n      onBlur={handleBlurValue}\r\n      id= {\"date\" + labelName}\r\n      label={labelName}\r\n      type=\"date\"\r\n      defaultValue={dateValue}\r\n      className={classes.textField}\r\n      InputLabelProps={{\r\n        shrink: true,\r\n      }\r\n    }\r\n  />\r\n  )\r\n}\r\n\r\nDatePickers.propTypes={\r\n  labelName:PropTypes.string,\r\n  dateValue:PropTypes.string, \r\n  handleDateValue:PropTypes.func\r\n}\r\n\r\nexport default DatePickers","import { useMemo} from \"react\"\r\nimport Slider from \"@material-ui/core/Slider\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./rangeSlider.scss\"\r\n\r\nconst RangeSlider = ({startingYear, valueMarks,initialValues, handleValuesSlider}) => {\r\n  const marksSlider= useMemo(()=>{\r\n    const marks =[]\r\n    let addYears = 0\r\n    for(let valueMark = initialValues[0]; valueMark<=initialValues[1];valueMark=valueMark+12){\r\n      const newMark = {\r\n        value:valueMark,\r\n        label:startingYear + addYears\r\n      }\r\n      marks.push(newMark)\r\n      addYears++\r\n    }\r\n    return marks\r\n  },[startingYear])\r\n\r\n  const handleChangeValue = (event, newValue) => {\r\n    handleValuesSlider(newValue)\r\n  }\r\n  return (\r\n    <div className= \"range-slider\">\r\n      <Slider\r\n        value={valueMarks}\r\n        onChange={handleChangeValue}\r\n        aria-labelledby=\"range-slider\"\r\n        step={1}\r\n        marks={marksSlider}\r\n        min={initialValues[0]}\r\n        max={initialValues[1]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nRangeSlider.propTypes = {\r\n  startingYear:PropTypes.number,\r\n  arrayValues:PropTypes.array,\r\n  finalYear:PropTypes.number, \r\n  handleValuesSlider:PropTypes.func\r\n}\r\n\r\nexport default RangeSlider","import { useState, Fragment} from \"react\"\r\nimport moment from 'moment'\r\nimport PropTypes from \"prop-types\"\r\nimport { Loading } from'../../Atom/Loading'\r\nimport { DatePickers } from \"../../Atom/DatePickers\"\r\nimport { RangeSlider } from \"../../Atom/RangeSlider\"\r\nimport \"./filterByDate.scss\"\r\n\r\nconst getMonthSlider = (date,previousDate)=>{\r\n    return date.diff(previousDate,\"months\")\r\n}\r\nconst getQtMonths = (startingYear,endYear)=>{\r\n    return ((endYear - startingYear) + 1 )*12\r\n}\r\n\r\nconst FilterByDate = ({startDate, endDate,handleMsgAlert}) =>{  \r\n    const [defaultDate,setDefaultDate]= useState({startDate:moment(startDate), endDate:moment(endDate)}) \r\n    const [minDate, setMinDate] = useState({date: moment(startDate), dateString: startDate})\r\n    const [maxDate, setMaxDate] = useState({date: moment(endDate), dateString: endDate})\r\n\r\n    const startDateObject= defaultDate.startDate.toObject()\r\n    const endDateObject = defaultDate.endDate.toObject()\r\n    const qtMonths = getQtMonths(startDateObject.years,endDateObject.years )\r\n    const rangeSlider = [1,(qtMonths +1)]\r\n    const startMarkSlider = startDateObject.months +1   \r\n    const endMarkSlider = qtMonths - (12-endDateObject.months) +1\r\n    const [rangeMonth, setRangeMonth]= useState([startMarkSlider,endMarkSlider])\r\n\r\n    const changeDate = (newValue,pastValue,date, fistDay=true)=>{\r\n        const differenceValues= newValue-pastValue\r\n        date.add(differenceValues, 'months')\r\n        const day = fistDay===true ? 1: date.daysInMonth()\r\n        date.date(day)\r\n        return date.format('YYYY-MM-DD')\r\n    }\r\n    const handleInferiorLimit =(dateString)=>{\r\n\r\n        setMinDate({date: moment(dateString), dateString: dateString})\r\n    }\r\n    const handleUpperLimit =(dateString)=>{\r\n        setMaxDate({date: moment(dateString), dateString: dateString})\r\n    }\r\n    const handleValuesSlider = (newValue)=>{\r\n        const marks = rangeMonth\r\n        if(newValue[0]!==rangeMonth[0]){\r\n            if(newValue[0]>=startMarkSlider){\r\n                const dateString = changeDate(newValue[0],rangeMonth[0],minDate.date)\r\n                handleInferiorLimit(dateString)\r\n                marks[0]=newValue[0]\r\n            }\r\n            else{\r\n                handleMsgAlert(\"dateLimit\",\"error\")\r\n                handleInferiorLimit(startDate)\r\n                marks[0]= startMarkSlider\r\n            }\r\n        }\r\n        if(newValue[1]!==rangeMonth[1]){\r\n            if(newValue[1]<=endMarkSlider){\r\n                const dateString = changeDate(newValue[1],rangeMonth[1],maxDate.date,false)\r\n                handleUpperLimit(dateString)\r\n                marks[1]=newValue[1]\r\n            }\r\n            else{\r\n                handleMsgAlert(\"dateLimit\",\"error\")\r\n                handleUpperLimit(endDate)\r\n                marks[1]= endMarkSlider\r\n            }\r\n        }\r\n        setRangeMonth(marks)\r\n    }\r\n    const handleDateValueStart = (newValueDate)=>{\r\n        let newDate = moment(newValueDate)\r\n        if(defaultDate.startDate<=newDate){\r\n            if(newDate<maxDate.date){\r\n                handleInferiorLimit(newValueDate)\r\n                const valueInferiorRange = getMonthSlider(newDate,minDate.date)\r\n                setRangeMonth([rangeMonth[0]+valueInferiorRange,rangeMonth[1]])\r\n            }\r\n            else{\r\n                handleInferiorLimit(maxDate.dateString)\r\n                setRangeMonth([rangeMonth[1],rangeMonth[1]])\r\n            }\r\n        }\r\n        else{\r\n            handleMsgAlert(\"dateLimit\",\"error\")\r\n            handleInferiorLimit(startDate)\r\n            setRangeMonth([startMarkSlider,rangeMonth[1]])\r\n        }\r\n    }   \r\n    const handleDateValueEnd = (newValueDate)=>{\r\n        let newDate = moment(newValueDate)\r\n        if(defaultDate.endDate>=newDate){\r\n            if(newDate>minDate.date){\r\n                handleUpperLimit(newValueDate)\r\n                const valueUpperRange = getMonthSlider(newDate,maxDate.date)\r\n                setRangeMonth([rangeMonth[0],rangeMonth[1]+valueUpperRange])\r\n            }\r\n            else{\r\n                handleUpperLimit(minDate.dateString)\r\n                setRangeMonth([rangeMonth[0],rangeMonth[0]])\r\n            }\r\n        }\r\n        else{\r\n            handleMsgAlert(\"dateLimit\",\"error\")\r\n            handleUpperLimit(endDate)\r\n            setRangeMonth([rangeMonth[0],endMarkSlider])\r\n        }   \r\n    }\r\n\r\n    return (\r\n        <div className=\"filter-by-date\">\r\n            { minDate && maxDate && rangeMonth?\r\n                <Fragment>\r\n                    <div className=\"filter-by-date__date-pickers\">\r\n                        <DatePickers labelName=\"Data Inicial\" \r\n                            dateValue={minDate.dateString} \r\n                            handleDateValue={handleDateValueStart}/>\r\n                        <DatePickers labelName=\"Data Final\"\r\n                            dateValue={maxDate.dateString} \r\n                            handleDateValue={handleDateValueEnd}/>\r\n                    </div>\r\n                    <RangeSlider startingYear={startDateObject.years} \r\n                                initialValues ={rangeSlider}\r\n                                valueMarks = {rangeMonth}\r\n                                handleValuesSlider = {handleValuesSlider} />\r\n                </Fragment>\r\n            :\r\n                <Loading className=\"filter-by-date__loading\"></Loading>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nFilterByDate.propTypes={\r\n    startDate: PropTypes.string,\r\n    endDate: PropTypes.string,\r\n    handleMsgAlert: PropTypes.func\r\n}\r\n\r\nexport default FilterByDate","import PropTypes from \"prop-types\"\r\nimport {  useState,useEffect }from \"react\"\r\nimport { getDates } from \"./getDataAssets\"\r\nimport { FilterByDate } from \"../../Molecule/FilterByDate\"\r\nimport { Loading } from \"../../Atom/Loading\"\r\n\r\nimport \"./walletEarnings.scss\"\r\n\r\nconst WalletEarnings = ({handleMsgAlert}) =>{    \r\n        const [dates,setDates] = useState(false)\r\n        const handleDates = (dates)=>{\r\n                setDates(dates)\r\n        }\r\n\r\n        useEffect(()=>{\r\n            (async () =>{\r\n                const dates= await getDates()\r\n                handleDates(dates)\r\n            })()\r\n        },[])\r\n\r\n   return (\r\n           <div className=\"earnings\">\r\n                {dates?\r\n                        <FilterByDate startDate={dates.startDate} endDate={dates.endDate} handleMsgAlert={handleMsgAlert}/>\r\n                :\r\n                        <Loading/>}\r\n           </div>\r\n   )\r\n}\r\n\r\nWalletEarnings.propTypes={\r\n        handleMsgAlert: PropTypes.func\r\n}\r\n\r\nexport default WalletEarnings","import { useState, Fragment } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { AlertToConfirm } from \"../../Atom/AlertToConfirm\"\r\nimport { WalletEquity } from \"../WalletEquity\"\r\nimport { ContainerNavBar } from \"../../Molecule/ContainerNavBar\"\r\nimport { MainButton } from \"../../Atom/MainButton\"\r\nimport gold from \"../../../img/gold_icon.svg\"\r\nimport pig from \"../../../img/pig_icon.svg\"\r\nimport chart from \"../../../img/chart2_icon.svg\"\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport './mainWallet.scss'\r\nimport WalletEarnings from '../WalletEarnings/WalletEarnings'\r\n\r\nconst arrayNavigations =[\r\n    {\r\n        description:\"Patrimônio\",\r\n        value:\"equity\",\r\n        extraclass:\"containerNavBarItem__fist\",\r\n        srcImg:gold\r\n    },\r\n    {\r\n        description:\"Proventos\",\r\n        value:\"earnings\",\r\n        extraclass:\"\",\r\n        srcImg:pig\r\n    },\r\n    {\r\n        description:\"Rentabilidade\",\r\n        value:\"\",\r\n        extraclass:\"\",\r\n        srcImg:chart\r\n    }\r\n]\r\n\r\nconst MainWallet = ({summaryWallet,selectedWalletCode,handleEditableTable})=>{\r\n    const [alert,setAlert]=useState({isAlert:false,message:null,severity:null})\r\n    const [selectNavigation, setSelectNavigation ]= useState(arrayNavigations[0].value)\r\n    const nameWallet = summaryWallet.wallets[selectedWalletCode].name\r\n    const percentageWallet = summaryWallet.wallets[selectedWalletCode].percentEquity * 100\r\n\r\n    const handleSelectNavigations = (selectedNavigations) =>{\r\n        setSelectNavigation(selectedNavigations.value)\r\n    }\r\n    const handleAlertClosure = () =>{\r\n        setAlert({isAlert:false,message:null,severity:null})\r\n    }\r\n    const handleMsgAlert = (message,severity) =>{\r\n        setAlert({isAlert:true,message:message,severity:severity})\r\n        setTimeout(()=>{\r\n            handleAlertClosure()\r\n        },50000)\r\n    }\r\n    const componentsWallets ={\r\n        equity:(<WalletEquity/>),\r\n        earnings:(<WalletEarnings handleMsgAlert={handleMsgAlert}/>),\r\n        profitability:null\r\n    }\r\n    \r\n    return (\r\n        <Fragment>\r\n        { alert.isAlert === true &&  \r\n            <AlertToConfirm handleAlert={handleAlertClosure} typeMessage={alert.message} severity={alert.severity}/>\r\n        } \r\n        <div className=\"main-wallet\"> \r\n            <div className=\"main-wallet__title\">\r\n                <span className=\"main-wallet__name\">{nameWallet}</span>\r\n                <span className=\"main-wallet__percentage\">({percentageWallet} % do Patrimônio)</span>\r\n                {summaryWallet.wallets[selectedWalletCode].editable===true &&\r\n                    <div className=\"main-wallet__button-edit\">\r\n                        <MainButton color={\"titleBlue\"} \r\n                            size=\"medium\"\r\n                            onClick={()=>handleEditableTable()} \r\n                            variant=\"outlined\"\r\n                            fontSize=\"0.9rem\"\r\n                            startIcon={<EditIcon/>}>Editar</MainButton>\r\n                    </div>\r\n            }\r\n            </div>\r\n\r\n            <ContainerNavBar arrayNavigations={arrayNavigations}\r\n                selectNavigation={selectNavigation}\r\n                handleSelectNavigations={handleSelectNavigations}/>\r\n            <div className=\"main-wallet__container\">\r\n                {\r\n                    componentsWallets[selectNavigation]\r\n                }\r\n            </div>  \r\n        </div>\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nMainWallet.propTypes={\r\n    summaryWallet:PropTypes.object,\r\n    selectedWalletCode:PropTypes.string,\r\n    handleEditableTable:PropTypes.func\r\n}\r\n\r\nexport default MainWallet","import equity from \"../../../TestData/walletsCustomize-DataTest.json\"\r\n\r\nasync function getDataDefaultAssets(codeWallet){\r\n    if(codeWallet){\r\n        const tableData = {\r\n            totalEquity:equity[codeWallet].totalEquity,\r\n            assets:equity[codeWallet].assets\r\n        }\r\n        return tableData\r\n    }\r\n\r\n    const newData = {\r\n            totalEquity:{\r\n                category:\"customWallets\",\r\n                name:\"Nova Carteira\",\r\n                percentEquity:1\r\n            },\r\n            assets:{}\r\n    }\r\n    return newData\r\n}\r\n\r\nfunction sendChanges(codeWallet,changes){\r\n    return true\r\n}\r\n\r\nexport{\r\n    getDataDefaultAssets,\r\n    sendChanges\r\n}","import assets from \"../TestData/dataAssets-DataTest.json\"\r\n\r\nasync function getDataAllAssets(){\r\n    return assets\r\n}\r\n\r\nexport {\r\n    getDataAllAssets\r\n}","import { createContext,useState,useEffect } from 'react';\r\nimport { getDataAllAssets }from \"./dataAutocomplete\"\r\n\r\nexport const DataAssetsContext = createContext({})\r\n\r\nexport function DataAssetsProvider({children}){\r\n    const [dataAssets,setDataAssets]=useState(null)\r\n    const [categoriesSelect,setCategories] =useState(null)\r\n\r\n    const handleDataAssets = (data)=>{\r\n        setDataAssets(data)\r\n        handleCategoriesSelect(data.categories)\r\n    }\r\n    const handleCategoriesSelect= (dataCategories)=>{\r\n        const namesCategories =Object.keys(dataCategories)\r\n        const categories = namesCategories.map((name)=>{\r\n            return {\r\n                title: dataCategories[name].title,\r\n                value: name\r\n            }\r\n        })\r\n        setCategories(categories)\r\n    }\r\n    const handleCodeSelect= (nameCategory)=>{\r\n        const categoryData = dataAssets.assets[nameCategory]\r\n        const codesAssets  =Object.keys(categoryData)\r\n        const codes = codesAssets.map((code)=>{\r\n            return {\r\n                title: code,\r\n                value: code\r\n            }\r\n        })\r\n        return codes\r\n    }\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const dataChart= await getDataAllAssets()\r\n            handleDataAssets(dataChart)\r\n        })()\r\n    },[])\r\n\r\n    const getDataAssets= ()=>{\r\n        return dataAssets\r\n    }\r\n    const getCategories= ()=>{\r\n        return categoriesSelect\r\n    }\r\n    const getCode= (nameCategory)=>{\r\n       const codes =  handleCodeSelect(nameCategory)\r\n        return codes\r\n    }\r\n    const getDescription= (category,code)=>{\r\n        return dataAssets.assets[category][code].name\r\n    }\r\n    return (\r\n        <DataAssetsContext.Provider value={{\r\n            getDataAssets,\r\n            getCategories,\r\n            getCode,\r\n            getDescription\r\n        }}>\r\n            {children}\r\n        </DataAssetsContext.Provider>\r\n    )\r\n}\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { getColors } from \"../../../utils/colors\"\r\nimport \"./counterPercentage.scss\"\r\n\r\nconst CounterPercentage = ({valuePercent,colorButton,handleValuePercentage,widthContainer,fontSize}) => {\r\n  const value = Number((valuePercent*100).toFixed())\r\n  const colors = getColors(colorButton)\r\n  const fontSizeInput = fontSize? fontSize:1\r\n  const widthInput = fontSizeInput * 2 + \"rem\"\r\n\r\n  const handleChange = (valueChance) =>{\r\n    if(valueChance>0 && valueChance<100){\r\n      handleValuePercentage(valueChance)\r\n    }\r\n    else if(valueChance<=0 || valueChance===\"\"){\r\n      handleValuePercentage(0)\r\n    }\r\n    else{\r\n      handleValuePercentage(100)\r\n    }\r\n  }\r\n  const handleChanceNumber=(numberChange)=>{\r\n    const newValue=value + numberChange\r\n    handleChange(newValue)\r\n  }\r\n  \r\n  return (\r\n    <div className=\"counter-percentage\" style={{width:widthContainer}}>\r\n        <button className=\"counter-percentage__button\" \r\n                style={{backgroundColor:colors.background}}\r\n                onClick={() => handleChanceNumber(-1)}>-</button>\r\n        <div className=\"counter-percentage__value\" style={{color:colors.background, fontSize:fontSizeInput+\"rem\"}}> \r\n            <input type=\"text\"\r\n                    className={\"counter-percentage__input\"}\r\n                    style={{color:colors.background, width:widthInput, fontSize:fontSizeInput+\"rem\"}}\r\n                    value={value}\r\n                    onChange={(e)=>handleChange(e.target.value)} \r\n                    />%\r\n        </div>\r\n        <button className=\"counter-percentage__button\" \r\n                style={{backgroundColor:colors.background}}\r\n                onClick={() => handleChanceNumber(1)}>+</button>\r\n    </div>\r\n  )\r\n}\r\n\r\nCounterPercentage.propTypes={\r\n  valuePercent:PropTypes.number,\r\n  colorButton:PropTypes.string, \r\n  maxLength:PropTypes.number,\r\n  handleValuePercentage:PropTypes.func\r\n}\r\n\r\nexport default CounterPercentage","import React from \"react\"\r\nimport { makeStyles } from \"@material-ui/core/styles\"\r\nimport Modal from \"@material-ui/core/Modal\"\r\nimport { MainButton } from \"../MainButton\"\r\nimport PropTypes from \"prop-types\"\r\n\r\nconst messages={\r\n  saveWallet:\"Deseja salvar esta carteira?\",\r\n  deleteWallet:\"Deseja deletar esta carteira?\",\r\n  cancelWallet: \"Deseja cancelar aos alterações?\",\r\n  deleteRow: \"Deseja deletar esta linha?\",\r\n  noSaveWallet: \"Carteira não contém 100% do Total Geral\"\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: \"20rem\",\r\n    height: \"10rem\",\r\n    backgroundColor: \"rgba(255,255,255,0.9)\",\r\n    border: \"1px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    fontWeight:\"600!important\",\r\n    padding: \"2rem\",\r\n    top: \"40%\",\r\n    left: \"45%\",\r\n    display:\"flex\", \r\n    flexDirection:\"column\",\r\n    justifyContent: \"space-between\",\r\n    alignItems:\"center\"\r\n  },\r\n  buttonClose:{\r\n    position:\"absolute\", \r\n    top:\"0.1rem\", \r\n    right:\"0.5rem\", \r\n    color:\"#c0c0c0\",\r\n    cursor:\"pointer\"\r\n  },\r\n  containerButtons:{\r\n    width:\"100%\", \r\n    display:\"flex\", \r\n    justifyContent:\"space-around\"\r\n  }\r\n}))\r\n\r\nconst ModalAlert =({propsButton,confirmModal,typeMessage,children})=> {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  const handleOpen = () => {\r\n    setOpen(true)\r\n  }\r\n  const handleClose = () => {\r\n    setOpen(false)\r\n  }\r\n  const handleConfirmModal = () => {\r\n    handleClose()\r\n    confirmModal()\r\n  }\r\n\r\n  const body = (\r\n    <div className={classes.paper}>\r\n      <div className={classes.buttonClose} onClick={handleClose}> x</div>\r\n      <span>{messages[typeMessage]}</span>\r\n      <div className={classes.containerButtons}>\r\n         <MainButton color=\"save\" size=\"medium\" variant=\"contained\" fontSize=\"1rem\" onClick={handleConfirmModal}>\r\n            Sim\r\n        </MainButton>\r\n        <MainButton color=\"delete\" size=\"medium\" variant=\"contained\" fontSize=\"1rem\" onClick={handleClose}>\r\n            Não\r\n        </MainButton>\r\n      </div>\r\n    </div>\r\n  )\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MainButton  onClick={handleOpen} {...propsButton}>\r\n          {children}\r\n      </MainButton>\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </React.Fragment>\r\n  )\r\n}\r\n\r\nModalAlert.propTypes={\r\n  propsButton:PropTypes.object, \r\n  confirmModal:PropTypes.func,\r\n  typeMessage:PropTypes.string\r\n}\r\n\r\nexport default ModalAlert","import {useState} from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport {CounterPercentage} from \"../../Atom/CounterPercentage\"\r\nimport {ModalAlert} from \"../../Atom/ModalAlert\"\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\nimport \"./tableRowForView.scss\"\r\n\r\nconst TableRowForView = ({tableRowData, handleValuePercentage, deleteRow}) => {\r\n  const [percentage, setPercentage] = useState(tableRowData.percentWallet)\r\n  const [newClass,setNewClass] = useState(\"\")\r\n\r\n  const handlePercentage = (valuePercentage)=>{\r\n    const value = valuePercentage/100\r\n    setPercentage(value)\r\n    handleValuePercentage(valuePercentage,tableRowData.code)\r\n    handleNewClass(value)\r\n  }\r\n  const handleNewClass = (value)=>{\r\n    if(tableRowData.percentWallet!==value){\r\n      setNewClass(\" table-row-for-view--color\")\r\n    }\r\n    else{\r\n      setNewClass(\"\")\r\n    }\r\n  }\r\n\r\n  const handleDelete = ()=>{\r\n    const percent= 0\r\n    handleValuePercentage(percent,tableRowData.code)\r\n    deleteRow(tableRowData.code)\r\n  }\r\n  \r\n  return (\r\n    <div className={\"table-row-for-view\"+ newClass}>\r\n      <span className=\"table-row-for-view__text\">{tableRowData.nameCategory}</span>\r\n      <span className=\"table-row-for-view__text\" >{tableRowData.code}</span>\r\n      <span className=\"table-row-for-view__text\" >{tableRowData.description}</span>\r\n      <span className=\"table-row-for-view__text\" >{tableRowData.percentWallet*100}%</span>\r\n      <CounterPercentage valuePercent={percentage}\r\n          colorButton={\"dark\"}\r\n          maxLength={3}\r\n          widthContainer={\"20%\"}\r\n          fontSize={1}\r\n          handleValuePercentage={(valuePercentage)=>handlePercentage(valuePercentage)}/>\r\n        <div className=\"table-row-for-view__button\">\r\n          <ModalAlert propsButton={{color:\"delete\", size:\"medium\", variant:\"contained\"}}\r\n                    confirmModal={()=>handleDelete()}\r\n                    typeMessage=\"deleteRow\"> \r\n            <DeleteIcon style={{margin:\"0\"}}/>    \r\n          </ModalAlert>\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nTableRowForView.propTypes = {\r\n  tableRowData: PropTypes.object,\r\n  handleValuePercentage:PropTypes.func,\r\n  deleteRow:PropTypes.func\r\n}\r\n\r\nexport default TableRowForView","import './autocompleteInput.scss'\r\nimport {useState} from \"react\"\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Autocomplete from '@material-ui/lab/Autocomplete'\r\n\r\nconst AutocompleteInput = ({style,dataInput, nameLabel,value, handleAutocomplete}) => {\r\n  const [inputValue, setInputValue] = useState(\"\")\r\n  \r\n  return (\r\n      <Autocomplete\r\n        id={nameLabel}\r\n        options={dataInput}\r\n        disableClearable\r\n        value={value}\r\n        onChange={(event, newValue) => {\r\n            handleAutocomplete(newValue)\r\n        }}\r\n        getOptionSelected = {(option, value) => option.value === value.value}\r\n        getOptionLabel={(option) => option.title}\r\n        style={style}\r\n        renderInput={(params) => <TextField {...params} placeholder={nameLabel}/>}\r\n        inputValue={inputValue}\r\n        onInputChange={(event, newInputValue) => {\r\n          setInputValue(newInputValue)\r\n        }}\r\n      />\r\n  )\r\n}\r\n\r\nexport default AutocompleteInput","import {Fragment, useState,useEffect,useContext} from \"react\"\nimport PropTypes from \"prop-types\"\nimport { DataAssetsContext } from \"../../../context/dataAssets\"\nimport { CounterPercentage } from \"../../Atom/CounterPercentage\"\nimport { AutocompleteInput } from \"../../Atom/AutocompleteInput\"\nimport { ModalAlert } from \"../../Atom/ModalAlert\"\nimport { Loading } from \"../../Atom/Loading\"\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport \"./editableTableRow.scss\"\n\nconst EditableTableRow = ({handleValuePercentage,deleteEditableRow}) => {\n  const setup= {category:null, code:null, description:\"\", percentCustomed:0}\n  const {\n    getCategories,\n    getCode,\n    getDescription }= useContext(DataAssetsContext)\n  const [newAssets,setNewAssets] = useState(setup)\n  const allCategories =  getCategories()\n  const [allCodes, setAllCodes] = useState([])\n\n  const handleNewValueAssets=(valuePercentage)=>{\n    if(newAssets.code){\n      newAssets.percentCustomed= valuePercentage/100\n      setNewAssets({...newAssets})\n      handleValuePercentage(valuePercentage,newAssets.code.value)\n    }\n  }\n  const handleAutocompleteCategory=(newValueCategory)=>{\n    newAssets.category = newValueCategory\n    newAssets.code = null\n    newAssets.description = \"\"\n    setNewAssets({...newAssets})\n    // get all codes in useEffect\n  }\n  const handleAutocompleteCode = (newValueCode)=>{\n    newAssets.code = newValueCode\n    newAssets.description = getDescription(newAssets.category.value,newValueCode.value)\n    newAssets.percentCustomed= 0\n    setNewAssets({...newAssets})\n  }\n  const handleAllCodes= (dataCodes) => setAllCodes(dataCodes)\n  const handleDelete = ()=>{\n    const percent= 0\n    handleValuePercentage(percent,newAssets.code.value)\n    deleteEditableRow()\n  }\n\n  useEffect(()=>{\n    ( () =>{\n      if(newAssets.category){\n        const dataCodes= getCode(newAssets.category.value)\n        handleAllCodes(dataCodes)\n      }\n    })()\n  },[newAssets.category])\n\n  return (\n    <Fragment>\n    {allCategories?        \n        <div className=\"editable-table-row\">\n          <AutocompleteInput style={{width:\"20%\",margin: \"0rem 0.5rem\"}} \n                            dataInput={allCategories} \n                            nameLabel={\"Categoria\"} \n                            value={newAssets.category}\n                            handleAutocomplete={handleAutocompleteCategory}/>\n          \n          <AutocompleteInput style={{width:\"20%\",margin: \"0rem 0.5rem\"}} \n                            dataInput={allCodes} \n                            nameLabel={\"Código\"} \n                            value={newAssets.code}\n                            handleAutocomplete={handleAutocompleteCode}/>\n          <span className=\"editable-table-row__text\" >{newAssets.description} </span>\n          <span className=\"editable-table-row__text\">0%</span>\n          <CounterPercentage valuePercent={newAssets.percentCustomed}\n            colorButton={\"dark\"}\n            maxLength={3}\n            widthContainer={\"20%\"}\n            handleValuePercentage={(valuePercentage)=>handleNewValueAssets(valuePercentage)}/>\n          <div className=\"table-row-for-view__button\">\n            <ModalAlert propsButton={{color:\"delete\", size:\"medium\", variant:\"contained\"}}\n                      confirmModal={()=>handleDelete()}\n                      typeMessage=\"deleteRow\"> \n              <DeleteIcon style={{margin:\"0\"}}/>    \n            </ModalAlert>\n          </div>\n      </div>\n      :\n      <Loading className=\"editable-table-row__loading\"/>\n    }\n    </Fragment>\n  )\n}\n\nEditableTableRow.propTypes = {\n  handleValuePercentage:PropTypes.func,\n  deleteEditableRow:PropTypes.func\n}\n\nexport default EditableTableRow","\r\nimport PropTypes from \"prop-types\"\r\nimport \"./totalWallet.scss\"\r\n\r\nconst TotalWallet = ({total}) => {\r\n  if(total===1){\r\n    return (\r\n    <div className=\"total-wallet total-wallet--margin\">\r\n        <div className=\"total-wallet__container\">\r\n            <span className=\"total-wallet__text\">TOTAL GERAL</span>\r\n            <span className=\"total-wallet__value\">{(total*100).toFixed()} %</span>\r\n        </div>\r\n    </div>\r\n    )\r\n  }\r\n  return(\r\n    <div className=\"total-wallet\">\r\n        <div className=\"total-wallet__container\">\r\n            <span className=\"total-wallet__text total-wallet__text--red\">TOTAL GERAL</span>\r\n            <span className=\"total-wallet__value total-wallet__text--red\">{(total*100).toFixed()} %</span>\r\n        </div>\r\n        {total>1 &&\r\n          <p className=\"total-wallet__alert\">Valor acima de 100%</p>}\r\n        {total>=0 && total<1 &&\r\n          <p className=\"total-wallet__alert\">Complete até 100%</p>}\r\n  </div>\r\n  )\r\n}\r\n\r\nTotalWallet.propTypes = {\r\n  total: PropTypes.number\r\n}\r\n\r\nexport default TotalWallet","import { useState, useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { DataAssetsProvider } from \"../../../context/dataAssets\"\r\nimport { TableRowForView } from \"../../Molecule/TableRowForView\"\r\nimport { EditableTableRow } from \"../../Molecule/EditableTableRow\"\r\nimport { MainButton } from \"../../Atom/MainButton\"\r\nimport { TotalWallet } from \"../../Atom/TotalWallet\"\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport \"./tableWalletsToCustomize.scss\"\r\n\r\nconst TableWalletsToCustomize = ({walletsToCustomize,handleAssetsChanges,handleTotalPercent})=>{\r\n    const namesHeader = [\"CATEGORIA\",\"CÓDIGO\",\"DESCRIÇÃO\",\"% DA CARTEIRA\",\"% DESEJADO\"]\r\n    const defaultWallets = Object.assign({}, walletsToCustomize)\r\n    const [dataTable, setDataTable]=useState(defaultWallets)  \r\n    const [changesAssets, setChangesAssets] = useState({})\r\n    const [dataEditable, setDataEditable]=useState([])  \r\n    const keysDataTable = Object.keys(dataTable)\r\n    const [allPercentages, setAllPercentages] = useState(getCodeAndPercent(keysDataTable,dataTable))\r\n    const total =  getTotalAssets(allPercentages)\r\n\r\n    useEffect(()=>{\r\n        handleTotalPercent(total)\r\n    },[allPercentages,total])\r\n\r\n    const handleValuePercentage = (valuePercentage, codeWallet)=>{\r\n        const percent = valuePercentage/100\r\n        changesAssets[codeWallet]={   \r\n            codeWallet: codeWallet,\r\n            newInfo: percent\r\n        }\r\n        allPercentages[codeWallet] = percent\r\n        setChangesAssets({...changesAssets})\r\n        setAllPercentages({...allPercentages})\r\n        handleAssetsChanges(changesAssets)\r\n    }\r\n    const deleteRow = (codeWallet)=>{\r\n        delete dataTable[codeWallet]\r\n        allPercentages.codeWallet = 0\r\n        setDataTable({...dataTable})\r\n        setAllPercentages({...allPercentages})\r\n    }\r\n    const addNewAssets = () =>{\r\n        const number = (Math.random()*100).toFixed()\r\n        const key = \"dataEditable\" + dataEditable.length + number\r\n        const newArray = [key].concat(dataEditable)\r\n        setDataEditable(newArray)\r\n    }\r\n    const deleteEditableRow = (indice) =>{\r\n        dataEditable.splice(indice, 1)\r\n        setDataEditable([...dataEditable])\r\n    }   \r\n\r\n    if(keysDataTable.length===0 && dataEditable.length===0){\r\n        addNewAssets()\r\n    }\r\n\r\n    return(\r\n        <section className=\"table-wallets-customize\">\r\n            <div className=\"table-wallets-customize__header\">\r\n                <span className=\"table-wallets-customize__title\">Ativos Da Carteira</span>\r\n                <MainButton color={\"save\"} \r\n                            size=\"medium\"\r\n                            onClick={()=>addNewAssets()} \r\n                            variant=\"outlined\"\r\n                            fontSize=\"0.8rem\"\r\n                            startIcon={<AddIcon/>}>ADICIONAR NOVO ATIVO</MainButton>\r\n            </div>\r\n            <div className=\"table-wallets-customize__columns\">\r\n                {namesHeader.map((name)=>{    \r\n                    return <span className=\"table-wallets-customize__cell\" key={name}>{name}</span>\r\n                })}\r\n            </div>\r\n            <div className=\"table-wallets-customize__rows\">\r\n                <DataAssetsProvider>\r\n                    {dataEditable.map((key,indice)=>{\r\n                        return <EditableTableRow key={key} \r\n                                    handleValuePercentage={handleValuePercentage}\r\n                                    deleteEditableRow={()=>deleteEditableRow(indice)}/>\r\n                        })\r\n                    }\r\n                </DataAssetsProvider>\r\n                {keysDataTable.map((codeAssets)=>\r\n                        dataTable[codeAssets] &&\r\n                        <TableRowForView tableRowData={dataTable[codeAssets]}\r\n                                        handleValuePercentage={handleValuePercentage}\r\n                                        deleteRow={deleteRow}\r\n                                    key={codeAssets}/>            \r\n                )}\r\n            </div>\r\n\r\n            <div className=\"table-wallets-customize__footer\">\r\n                <TotalWallet total={total}/>\r\n            </div>\r\n        </section>\r\n    ) \r\n}\r\n\r\nTableWalletsToCustomize.propTypes={\r\n    walletsToCustomize:PropTypes.object,\r\n    handleAssetsChanges:PropTypes.func,\r\n    handleTotalPercent:PropTypes.func,\r\n}\r\n\r\nexport default TableWalletsToCustomize\r\n\r\nfunction getTotalAssets(allPercentages){\r\n    const namesCode = Object.keys(allPercentages)\r\n    return namesCode.reduce((valueTotal, nameCode)=>{\r\n        return valueTotal + allPercentages[nameCode]\r\n    },0)\r\n}\r\n\r\nfunction getCodeAndPercent(keysDataTable,dataTableAssets){\r\n    const allPercentages = {}\r\n    keysDataTable.forEach((nameKey)=>{\r\n        const code = dataTableAssets[nameKey].code\r\n        allPercentages[code]=dataTableAssets[nameKey].percentWallet\r\n    })\r\n    return allPercentages\r\n}","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport \"./inputText.scss\"\r\n\r\nconst InputText = ({nameInput,...others}) => {\r\n  return (\r\n    <div className=\"input-text\">\r\n      <p className=\"input-text__name\">{nameInput}</p>\r\n      <input type=\"text\" \r\n            className=\"input-text__input\"\r\n            {...others}/>\r\n    </div>\r\n  )\r\n}\r\n\r\nInputText.propTypes={\r\n  nameInput:PropTypes.string, \r\n  maxlength:PropTypes.number,\r\n  handleInputText:PropTypes.func\r\n}\r\n\r\nexport default InputText","import React, {useState} from 'react'\r\nimport PropTypes from 'prop-types'\r\n\r\nimport { InputText } from \"../../Atom/InputText\"\r\nimport { CounterPercentage } from \"../../Atom/CounterPercentage\"\r\nimport './containerTitleEditable.scss'\r\n\r\nconst ContainerTitleEditable = ({nameInput,defaultValuesWallet,handleHeaderChanges}) =>{\r\n    const defaultTitle = Object.assign({}, defaultValuesWallet.totalEquity)\r\n    const [dataHeader, setDataHeader]=useState(defaultTitle)\r\n\r\n    const handleNameInput =(newNameWallet)=>{\r\n        dataHeader.name=newNameWallet\r\n        setDataHeader(dataHeader)\r\n        handleHeaderChanges({\r\n            name:newNameWallet,\r\n            percent:dataHeader.percentEquity\r\n        })\r\n    }\r\n    const handleValuePercentage = (valuePercentage)=>{\r\n        const percent = valuePercentage/100\r\n        dataHeader.percentEquity= percent\r\n        setDataHeader({...dataHeader})\r\n        handleHeaderChanges({\r\n            name:dataHeader.name,\r\n            percent:percent\r\n        })\r\n    }\r\n\r\n    return (\r\n        <div className=\"container-title-editable\">\r\n            <InputText nameInput={nameInput} \r\n                defaultValue={dataHeader.name}\r\n                maxLength={15} \r\n                onChange={(e)=>handleNameInput(e.target.value)}/>\r\n            <CounterPercentage valuePercent={dataHeader.percentEquity}\r\n                colorButton={\"titleBlue\"} \r\n                maxLength={3} \r\n                fontSize={1.5}\r\n                handleValuePercentage={(valuePercentage)=>handleValuePercentage(valuePercentage)}/> \r\n            <span className=\"container-title-editable__text\">do Patrimônio</span>\r\n        </div>\r\n    )\r\n}\r\n\r\nContainerTitleEditable.propTypes={\r\n    nameInput:PropTypes.string,\r\n    defaultValuesWallet: PropTypes.object,\r\n    handleAssetsChanges: PropTypes.func\r\n}\r\n\r\nexport default ContainerTitleEditable\r\n\r\n","export default __webpack_public_path__ + \"static/media/return_icon.fabe77dd.svg\";","import {Fragment, useState,useEffect } from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { getDataDefaultAssets, sendChanges } from \"./getDataAssets\"\r\nimport { TableWalletsToCustomize } from \"../TableWalletsToCustomize\"\r\nimport { ContainerTitleEditable } from \"../../Molecule/ContainerTitleEditable\"\r\nimport { ModalAlert } from \"../../Atom/ModalAlert\"\r\nimport { AlertToConfirm } from \"../../Atom/AlertToConfirm\"\r\nimport { Loading } from \"../../Atom/Loading\"\r\nimport returnIcon from \"../../../img/return_icon.svg\"\r\n\r\nimport \"./walletsToCustomize.scss\"\r\n\r\nconst WalletsToCustomize = ({selectedWalletCode,handlePageReturn})=>{\r\n    const [defaultValuesWallet, setDefaultValuesWallet] = useState(null)\r\n    const [changes, setChanges] = useState({totalEquity:{}, assets:{}})\r\n    const [totalPercent, setTotalPercent]=useState(100)\r\n    const [isDisplayAlert, setIsDisplayAlert]=useState(false)\r\n    const nameInput = \"Nome da Carteira\"\r\n\r\n    const handleDefaultValue = (dataAssets)=>{\r\n        setDefaultValuesWallet(dataAssets)\r\n    }\r\n    const handleTotalPercent=(total)=>{\r\n        setTotalPercent(total)\r\n    }\r\n    const handleHeaderChanges = (newChange)=>{\r\n        changes.totalEquity=newChange\r\n        setChanges({...changes})\r\n    }\r\n    const handleAssetsChanges = (newChange) =>{\r\n        changes.assets=newChange\r\n        setChanges({...changes})\r\n    }\r\n    const handleAlert= () =>{\r\n        const alert= isDisplayAlert? false:true\r\n        setIsDisplayAlert(alert)\r\n    }\r\n    const salveWalletsChanges = ()=>{\r\n        const total = 1\r\n        if(totalPercent===total){\r\n            sendChanges(selectedWalletCode,changes)\r\n            if(isDisplayAlert){\r\n                handleAlert()\r\n            }\r\n        }\r\n        else{\r\n            if(isDisplayAlert===false){\r\n                handleAlert()\r\n            }\r\n        }\r\n    }\r\n    const cancelWalletsChanges = ()=>{\r\n        setChanges({})\r\n        const data = {...defaultValuesWallet}\r\n        setDefaultValuesWallet(null)\r\n        setTimeout(()=>{\r\n            setDefaultValuesWallet(data)\r\n        },500)\r\n    }\r\n    const deleteWalletChanges= ()=>{\r\n        changes.totalEquity.percentEquity=0\r\n        sendChanges(selectedWalletCode,changes)\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async () =>{\r\n            const assets= await getDataDefaultAssets(selectedWalletCode)\r\n            handleDefaultValue(assets)\r\n        })()\r\n    },[selectedWalletCode])\r\n\r\n    return(\r\n        <Fragment>\r\n        {isDisplayAlert &&\r\n            <AlertToConfirm handleAlert={handleAlert} typeMessage=\"noSaveWallet\" severity=\"error\"/>\r\n        }\r\n        {defaultValuesWallet?\r\n            <div className=\"wallets-customize\">\r\n                    <header className=\"wallets-customize__header\">\r\n                        <img src={returnIcon} loading=\"lazy\" alt=\"returno\" \r\n                        className=\"wallets-customize__icon\"\r\n                        onClick={handlePageReturn}/>\r\n                       <ContainerTitleEditable nameInput={nameInput} \r\n                                        defaultValuesWallet={defaultValuesWallet}\r\n                                        handleHeaderChanges={handleHeaderChanges}/>\r\n                    </header>\r\n                    <div className=\"wallets-customize__buttons\">\r\n                        <ModalAlert propsButton={{color:\"save\", size:\"large\", variant:\"contained\", fontSize:\"1.1rem\"}}\r\n                                confirmModal={salveWalletsChanges}\r\n                                typeMessage=\"saveWallet\">SALVAR MODIFICAÇÕES</ModalAlert>\r\n                        <ModalAlert propsButton={{color:\"cancel\", size:\"large\", variant:\"contained\", fontSize:\"1.1rem\"}}\r\n                            confirmModal={cancelWalletsChanges}\r\n                            typeMessage=\"cancelWallet\">CANCELAR MODIFICAÇÕES</ModalAlert>\r\n                        <ModalAlert propsButton={{color:\"delete\", size:\"large\", variant:\"contained\", fontSize:\"1.1rem\"}}\r\n                                confirmModal={deleteWalletChanges}\r\n                                typeMessage=\"deleteWallet\">DELETAR CARTEIRA</ModalAlert>\r\n                    </div>\r\n                    <TableWalletsToCustomize walletsToCustomize={defaultValuesWallet.assets} \r\n                                            handleAssetsChanges={handleAssetsChanges}\r\n                                            handleTotalPercent={handleTotalPercent}/>\r\n                </div>\r\n            :\r\n            <Loading className=\"page-wallets__loading\"/>\r\n        }\r\n        </Fragment>\r\n    )\r\n}\r\n\r\nWalletsToCustomize.propTypes={\r\n    selectedWalletCode:PropTypes.string,\r\n    handlePageReturn:PropTypes.func\r\n}\r\n\r\nexport default WalletsToCustomize","import data from \"../../TestData/wallets-DataTest.json\"\r\n\r\nasync function getAllWallets(){\r\n    await delay(1000)\r\n    return data\r\n}\r\n\r\nfunction delay (ms){\r\n    return new Promise((resolve)=>\r\n        setTimeout(\r\n            resolve\r\n        ,ms)\r\n    )\r\n}\r\n\r\nexport{\r\n    getAllWallets\r\n}","import { Fragment, useState, useEffect } from 'react'\r\nimport { ContainerMainPage } from \"../../components/Atom/ContainerMainPage\"\r\nimport { ContainerAsidePanel } from \"../../components/Atom/ContainerAsidePanel\"\r\nimport {AsideMenuWallet} from \"../../components/Organism/AsideMenuWallet\"\r\nimport { MainWallet } from \"../../components/Organism/MainWallet\"\r\nimport { WalletsToCustomize } from \"../../components/Organism/WalletsToCustomize\"\r\nimport { Loading } from'../../components/Atom/Loading'\r\nimport{getAllWallets} from \"./getDataWallets\"\r\nimport \"./wallets.scss\"\r\n\r\nconst Wallets = () =>{\r\n    const dataSetup = {\r\n        summaryWallet:false,\r\n        current:{\r\n            codeWallet:null,\r\n            type:null\r\n        },\r\n        previus:{\r\n            codeWallet:null,\r\n            type:null \r\n        }\r\n    }\r\n    const [walletSetup, setWalletSetup ]= useState(dataSetup)\r\n    const typesWallets={\r\n        wallets:\"wallets\",\r\n        customWallets:\"customWallets\",\r\n        balanceWallets:\"balanceWallets\"\r\n    }     \r\n    const changeWalletPage = (selectedCodeWallet,typeMessage)=>{\r\n        walletSetup.previus.codeWallet = walletSetup.current.codeWallet \r\n        walletSetup.previus.type= walletSetup.current.type\r\n        walletSetup.current.codeWallet = selectedCodeWallet\r\n        walletSetup.current.type = typeMessage\r\n        setWalletSetup({...walletSetup})\r\n    }\r\n    const handleCodeWallet = (selectedCodeWallet) =>{\r\n        changeWalletPage(selectedCodeWallet,typesWallets.wallets)\r\n    }\r\n    const handleCodeBalanceWallet = (selectedCodeWallet) =>{\r\n        changeWalletPage(selectedCodeWallet,typesWallets.balanceWallets)\r\n    }\r\n    const handleEditableTable = ()=>{\r\n        changeWalletPage(walletSetup.current.codeWallet,typesWallets.customWallets)\r\n    }\r\n    const handlePageReturn = ()=> {\r\n        changeWalletPage(walletSetup.previus.codeWallet,walletSetup.previus.type)\r\n    }\r\n    const addNewCustomWallet = () =>{\r\n        changeWalletPage(null,typesWallets.customWallets)\r\n    }\r\n    const handleWalletData = (allWallets)=>{\r\n        walletSetup.summaryWallet=allWallets\r\n        walletSetup.current.codeWallet = allWallets.defaultWallet\r\n        walletSetup.current.type = typesWallets.wallets\r\n        setWalletSetup({...walletSetup})\r\n    }\r\n\r\n    useEffect(()=>{\r\n        (async () =>{   \r\n            const allWallets= await getAllWallets()\r\n            handleWalletData(allWallets)\r\n        })()\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"page-wallets\">\r\n            { walletSetup.summaryWallet? \r\n                <Fragment>\r\n                    <ContainerAsidePanel>\r\n                        <AsideMenuWallet \r\n                            summaryWallet={walletSetup.summaryWallet}\r\n                            selectedWalletCode={walletSetup.current.codeWallet}\r\n                            handleCodeWallet={handleCodeWallet}\r\n                            handleCodeBalanceWallet={handleCodeBalanceWallet}\r\n                            addNewCustomWallet={addNewCustomWallet}\r\n                            />\r\n                    </ContainerAsidePanel>\r\n\r\n                    <ContainerMainPage>\r\n                        {typesWallets.wallets===walletSetup.current.type &&\r\n                            <MainWallet summaryWallet={walletSetup.summaryWallet} \r\n                            selectedWalletCode={walletSetup.current.codeWallet} \r\n                            handleEditableTable={handleEditableTable}\r\n                            key={walletSetup.current.codeWallet}\r\n                            />\r\n                        }    \r\n                        {typesWallets.customWallets===walletSetup.current.type &&     \r\n                            <WalletsToCustomize key={walletSetup.current.codeWallet}\r\n                                selectedWalletCode={walletSetup.current.codeWallet} \r\n                                handlePageReturn={handlePageReturn}/>\r\n                        }\r\n                        {/* {typesWallets.balanceWallets===walletSetup.current.type &&     \r\n                            <WalletsToCustomize key={walletSetup.current.codeWallet}\r\n                                selectedWalletCode={walletSetup} handlePageReturn={handlePageReturn}/>\r\n                        } */}\r\n                    </ContainerMainPage>\r\n                </Fragment>\r\n                    :\r\n                <Loading className=\"page-wallets__loading\"/>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Wallets","import React from 'react'\r\n\r\nimport {Header} from \"./components/Organism/Header\"\r\nimport {Wallets} from \"./pages/Wallets\"\r\n\r\nimport \"./reset.scss\"\r\nimport \"./index.scss\"\r\n\r\nfunction Routes() {\r\n  return (\r\n    <div className=\"container\">\r\n        <Header></Header>\r\n        <Wallets></Wallets>\r\n    </div>\r\n\r\n  )\r\n}\r\n\r\nexport default Routes\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport Routes from './Routes.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Routes />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}